[{"id":1,"kind":"project","name":"Lem_in","x":3600.0,"y":3000.0,"by":[{"parent_id":27,"points":[[3450,2850],[3600,3000]]},{"parent_id":43,"points":[[3450,3150],[3600,3000]]}],"project_id":29,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated push_swap","description":"Votre colonie de fourmis doit se déplacer d'un point à un autre. Mais comment faire pour que cela prenne le moins de temps possible ? Ce projet vous fait découvrir les algorithmes de parcours de graphe : votre programme devra sélectionner intelligemment les chemins et les mouvements précis qui doivent être empruntés par ces fourmis.","slug":"lem_in"},{"id":6,"kind":"exam","name":"C Exam Alone In The Dark - Beginner","x":2362.0,"y":3424.0,"by":[],"project_id":11,"difficulty":"Tier 1","duration":"about 1 week","rules":"","description":"Les examens machine permettent de vérifier vos acquis lorsque vous êtes seuls face à votre travail, sans vos peers et sans internet.\r\nPour valider ce projet (qui est un pré-requis à votre départ en 1er stage), il vous faut valider 5 examens avec une note minimum de 75.","slug":"c-exam-alone-in-the-dark-beginner"},{"id":15,"kind":"project","name":"42run","x":2900.0,"y":4250.0,"by":[{"parent_id":135,"points":[[3000,4250],[2900,4250]]}],"project_id":178,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated scop. You must have validated first-internship","description":"Vous connaissez Temple Run ? Il est temps de le refaire ! Ce projet intermédiaire d'OpenGL vous invite à recréer ce jeu mobile. Amusez-vous : tous les bonus sont possible pour dépasser la célèbre franchise.","slug":"42run"},{"id":25,"kind":"project","name":"FdF","x":3002.0,"y":3206.0,"by":[{"parent_id":2,"points":[[3002,3000],[3002.5,3206.5]]},{"parent_id":15,"points":[[3002.5,3206.5],[3003.5,3444.5]]}],"project_id":4,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Tous les programmes que vous avez écris jusqu'à maintenant s'exécutaient uniquement en mode texte dans votre terminal.\r\nDécouvrons maintenant quelque chose de plus excitant : comment ouvrir une fenêtre graphique et dessiner dedans ?\r\nPour commencer votre voyage au pays de la programmation graphique, FdF vous propose de représenter le maillage en \"fils de fer\" d'un terrain en 3D.","slug":"fdf"},{"id":35,"kind":"project","name":"ft_ls","x":3000.0,"y":2800.0,"by":[{"parent_id":2,"points":[[3002,3000],[2999,2800]]}],"project_id":3,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Pour tout connaitre du filesystem, de la façon dont sont rangés les fichiers et répertoires, codez par vous-même une des commandes les plus utilisées : ls .","slug":"ft_ls"},{"id":38,"kind":"project","name":"ft_select","x":2800.0,"y":2450.0,"by":[{"parent_id":7,"points":[[2999,2591],[3000,2450]]},{"parent_id":7,"points":[[3000,2450],[2800,2450]]}],"project_id":33,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated minishell","description":"Ce projet a pour but de vous initier à la manipulation du terminal avec les termcaps. Vous allez ici apprendre à créer une interface utilisateur pour un programme lancé dans le terminal.","slug":"ft_select"},{"id":39,"kind":"project","name":"21sh","x":3000.0,"y":2350.0,"by":[{"parent_id":7,"points":[[3000,2550],[3000,2350]]}],"project_id":523,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must not have validated ft_sh2 and ft_sh3. You must have validated minishell","description":"On passe aux choses sérieuses ! Avec 21sh, vous allez devoir écrire une implémentation proche de la réalité de la boucle \"read, eval, print\" d'un shell.\r\nA l'aide de la bibliothèque Termcaps, vous ajouterez une édition de ligne fonctionnelle et utile à la partie \"read\" de votre shell. Déplacements du curseur, édition, historique, multilignes, etc.\r\nMais surtout pour la partie \"eval\", oubliez la fonction ft_split que vous utilisiez dans votre Minishell pour découper la ligne de commande entrée par l'utilisateur ! \r\n21sh sera votre premier interprète réaliste, et en tant que tel, ce projet vous permettra de découvrir les analyses lexicale, syntaxique, et sémantique communes aux interprètes et aux compilateurs.\r\nAvec des structures de données et des traitements adaptées, ajouter la gestions des pipes (\"|\") et des redirections (\"<\", \"<<\", \">>\". \">\") sera très simple !","slug":"21sh"},{"id":41,"kind":"project","name":"ft_printf","x":3200.0,"y":3000.0,"by":[{"parent_id":53,"points":[[3000,3000],[3200,3000]]}],"project_id":5,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Vous en avez assez de faire vos affichages en alternant ft_putstr et ft_putnbr ? Vous n'avez pas le droit d'utiliser printf ? Recodez le votre ! Ce sera l'occasion de découvrir une feature du C - les fonctions variadiques - et de vous entrainer à la gestion fine des options d'affichage. Vous aurez ensuite le droit d'utiliser votre printf dans tous vos projets ultérieurs.","slug":"ft_printf"},{"id":42,"kind":"project","name":"Push_swap","x":3200.0,"y":2900.0,"by":[{"parent_id":42,"points":[[3300,3000],[3450,2850]]}],"project_id":27,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated filler","description":"Ce projet vous demande de trier des données sur une pile, avec un set d’instructions limité, en moins de coups possibles. Pour le réussir, vous devrez manipuler différents algorithmes de tri et choisir la (ou les ?) solution la plus appropriée pour un classement optimisé des données.","slug":"push_swap"},{"id":43,"kind":"project","name":"Filler","x":3450.0,"y":3150.0,"by":[{"parent_id":42,"points":[[3300,3000],[3450,3150]]}],"project_id":26,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Créez votre joueur pour affronter d’autres étudiants sur le célèbre (ou pas) plateau du Filler. Le principe est simple : deux joueurs s’affrontent sur un plateau, et doivent placer, tour à tour, la pièce que le maître du jeu (fourni sous la forme d’un exécutable Ruby) leur donne, gagnant ainsi des points. La partie s’arrête dès qu’une pièce ne peut plus être placée. Petit projet ludique !","slug":"filler"},{"id":49,"kind":"project","name":"Abstract VM","x":2400.0,"y":4350.0,"by":[{"parent_id":62,"points":[[2400,4039],[2400,4350]]}],"project_id":80,"difficulty":"Tier 2","duration":"about 3 weeks","rules":"You must have validated piscine-cpp","description":"Ce projet vous remet dans le bain après la piscine C++ et vous invite à réaliser une machine virtuelle capable d'exécuter un code en pseudo-ASM basique. Vous allez ainsi utiliser une stack pour faire des opérations arithmétiques basiques, à l'instar de la commande dc.","slug":"abstract-vm"},{"id":56,"kind":"project","name":"Nibbler","x":2200.0,"y":4450.0,"by":[{"parent_id":80,"points":[[2400,4350],[2300,4455]]},{"parent_id":80,"points":[[2300,4450],[2200,4450]]}],"project_id":95,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated abstract-vm","description":"Ce projet de C++ vous fait recoder le jeu Snake avec plusieurs interfaces graphiques différentes; le joueur devant pouvoir switcher entre les interfaces pendant le jeu. C'est l'occasion de voir comment charger et utiliser des bibliothèques dynamiques au runtime.","slug":"nibbler"},{"id":96,"kind":"project","name":"Get_Next_Line","x":3000.0,"y":3000.0,"by":[{"parent_id":412,"points":[[2725,3000],[3000,3000]]}],"project_id":2,"difficulty":"Tier 1","duration":"about 1 week","rules":"","description":"Whether it's a file, standard input, or even later a a unix socket, you'll still need to read content line by line.\r\nIt is therefore time to tackle this function, which is essential for a number of your later projects.","slug":"get_next_line"},{"id":104,"kind":"big_project","name":"Corewar","x":3900.0,"y":3000.0,"by":[{"parent_id":29,"points":[[3600,3000],[3900,3000]]}],"project_id":22,"difficulty":"Tier 3","duration":"about 4 weeks","rules":"You must have validated lem_in","description":"Ce projet vous invite à créer une arène virtuelle et à y faire s’affronter des programmes codés dans un langage simpliste. Vous allez ainsi aborder la conception d’une VM (avec les instructions qu’elle reconnait, les registres, etc), et les problématiques de compilation d’un langage assembleur en bytecode. Avec, en bonus, le plaisir de faire s’affronter vos champions sur votre arène !","slug":"corewar"},{"id":105,"kind":"project","name":"minishell","x":3000.0,"y":2600.0,"by":[{"parent_id":35,"points":[[3000,2800],[3000,2600]]}],"project_id":7,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated ft_ls","description":"Première étape de la réalisation d'un shell. Dans ce projet, vous devez réaliser un mini-shell capable de lire et d'évaluer des commandes simples de l'utilisateur. La lecture impliquera une analyse lexicale et syntaxique triviale de la commande, et l'évaluation impliquera de rechercher le binaire correspondant sur la machine et l'exécuter, ou bien d'exécuter le code concerné dans le cas d'une commande \"built-in\" au shell.","slug":"minishell"},{"id":108,"kind":"project","name":"Wolf3d","x":3000.0,"y":3500.0,"by":[{"parent_id":25,"points":[[3000,3300],[3000,3500]]}],"project_id":8,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated fdf","description":"Inspired by the famous eponymous game of the 90s was the first First Person Shooter, the project allows you to approach the technique of ray-casting. Your goal will be to represent a dynamic view inside a labyrinth in which one can move.\r\nYour goal will be to represent a dynamic view inside a labyrinth in which one can move.","slug":"wolf3d"},{"id":109,"kind":"project","name":"RTv1","x":3000.0,"y":3700.0,"by":[{"parent_id":108,"points":[[3000,3500],[3000,3700]]}],"project_id":23,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated wolf3d","description":"Discover the fundamental principles of Raytracing: the creation of computer-generated images.\r\nIn this introductory project you will render simple scenes involving primitive objects and simple lights.","slug":"rtv1"},{"id":110,"kind":"big_project","name":"RT","x":3000.0,"y":3900.0,"by":[{"parent_id":109,"points":[[3000,3700],[3000,3900]]}],"project_id":24,"difficulty":"Tier 3","duration":"about 6 weeks","rules":"You must have validated rtv1","description":"RT expands on the concepts of RTv1 with several new effects: reflection, transparency(refraction), limited objects, negative objects, material textures...\r\n\r\nUse what you learned from RTv1 to architecture a ray tracer flexible enough to support all these complicated features and render\r\nbeautiful images.","slug":"rt"},{"id":183,"kind":"project","name":"Libft","x":2550.0,"y":3000.0,"by":[{"parent_id":756,"points":[[2348,3001],[2550,3000]]}],"project_id":1,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated piscine-reloaded","description":"Ce premier projet en tant qu'étudiant de 42 va vous faire consolider vos acquis de piscine. Vous allez recoder un certain nombre de fonctions de la librairie C standard, ainsi que d'autres fonctions utilitaires que vous réutiliserez tout au long de votre cursus.","slug":"libft"},{"id":196,"kind":"project","name":"docker-1","x":2700.0,"y":3300.0,"by":[{"parent_id":687,"points":[[2850,3149],[2700,3300]]}],"project_id":847,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated init","description":"Premier projet sur l'écosystème Docker. Apprenez à réfléchir en containers à travers ce sujet, qui vous fera manipuler le binaire docker et créer vos premiers containers avec des Dockerfiles","slug":"docker-1"},{"id":200,"kind":"project","name":"avaj-launcher","x":2100.0,"y":4350.0,"by":[{"parent_id":62,"points":[[2220,4200],[2220,4303]]},{"parent_id":62,"points":[[2220,4300],[2100,4350]]}],"project_id":870,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated piscine-cpp","description":"First projet of the Java projects arc. Implementation of a simple Java program according to a given class diagram written in UML.","slug":"avaj-launcher"},{"id":201,"kind":"project","name":"swingy","x":1950.0,"y":4420.0,"by":[{"parent_id":870,"points":[[2100,4350],[1950,4420]]}],"project_id":871,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated avaj-launcher","description":"This is the second project from the Java world at 42. You will learn to develop GUI applications with the SWING framework, in order to create an RPG game.","slug":"swingy"},{"id":202,"kind":"project","name":"fix-me","x":1800.0,"y":4490.0,"by":[{"parent_id":871,"points":[[1950,4420],[1800,4490]]}],"project_id":872,"difficulty":"Tier 3","duration":"about 4 weeks","rules":"You must have validated swingy","description":"Final project of the Java Programming arc. Write a program that simulates stock exchanges and deals with trading algorithms, with networking and socket implementations. ","slug":"fix-me"}]