[{"id":2,"kind":"project","name":"mod1","x":3750.0,"y":3250.0,"by":[{"parent_id":29,"points":[[3600,3000],[3750,3000]]},{"parent_id":29,"points":[[3750,3000],[3750,3250]]}],"project_id":78,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated lem_in","description":"Ce projet graphique de simulation vous fera représenter une surface en 3D, sur laquelle s'écoule de l'eau. Empirique, ou scientifique (avec nombre équations), recréez une vague, un tsunami, ou simplement de la pluie sur votre surface.","slug":"mod1"},{"id":25,"kind":"project","name":"FdF","x":3002.0,"y":3206.0,"by":[{"parent_id":2,"points":[[3002,3000],[3002.5,3206.5]]},{"parent_id":15,"points":[[3002.5,3206.5],[3003.5,3444.5]]}],"project_id":4,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Tous les programmes que vous avez écris jusqu'à maintenant s'exécutaient uniquement en mode texte dans votre terminal.\r\nDécouvrons maintenant quelque chose de plus excitant : comment ouvrir une fenêtre graphique et dessiner dedans ?\r\nPour commencer votre voyage au pays de la programmation graphique, FdF vous propose de représenter le maillage en \"fils de fer\" d'un terrain en 3D.","slug":"fdf"},{"id":26,"kind":"project","name":"Fract'ol","x":3003.0,"y":3444.0,"by":[],"project_id":15,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated fdf","description":"Découvrez la programmation 2D et l'univers psychédelique des fractales grâce à ce projet à réaliser avec la minilibX.","slug":"fract-ol"},{"id":27,"kind":"project","name":"Wolf3d","x":2850.0,"y":3680.0,"by":[{"parent_id":15,"points":[[3003.5,3444.5],[2850,3680]]}],"project_id":8,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated fract-ol","description":"Inspired by the world-famous 90's game of similar naming (which was the first FPS ever). Explore the technique of ray-casting. The goal is to create a dynamic view inside of a maze. How far will you go to create the best game we have ever seen?","slug":"wolf3d"},{"id":28,"kind":"project","name":"RTv1","x":3150.0,"y":3680.0,"by":[{"parent_id":15,"points":[[3003.5,3444.5],[3150,3680]]}],"project_id":23,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated fract-ol","description":"Découvrez les principes fondamentaux du Raytracing : la création d'images de synthèses par ordinateur. Ce premier projet vous fera réaliser des scènes simples impliquant des objets et des lumières non complexes.","slug":"rtv1"},{"id":29,"kind":"big_project","name":"RT","x":3000.0,"y":3900.0,"by":[{"parent_id":23,"points":[[3150,3680],[3000,3900]]},{"parent_id":8,"points":[[2850,3680],[3000,3900]]}],"project_id":24,"difficulty":"Tier 3","duration":"about 6 weeks","rules":"You must have validated 1 of rtv1 and wolf3d","description":"Passez à la vitesse supérieure ! Suite du Rtv1, le RT pousse beaucoup plus loin les possibilités du Raytracing : effet miroir, transparence, découpe des objets, applications de textures... Capitalisez sur le projet précédent pour réaliser une infrastructure capable de supporter toutes ces ramifications et obtenir de sublimes images de synthèse.","slug":"rt"},{"id":33,"kind":"big_project","name":"42sh","x":3000.0,"y":2100.0,"by":[{"parent_id":523,"points":[[3000,2350],[3000,2100]]}],"project_id":35,"difficulty":"Tier 3","duration":"about 6 weeks","rules":"You must have validated 1 of 21sh and ft_sh3","description":"Building upon your previous work on 21sh, you will create a complete shell. Through this project, you will build your own complete shell based on a minimum set of features - up to job control and shell script. This project will consequently enable you to explore a large spectrum of standard UNIX (and POSIX) features.","slug":"42sh"},{"id":35,"kind":"project","name":"ft_ls","x":3000.0,"y":2800.0,"by":[{"parent_id":2,"points":[[3002,3000],[2999,2800]]}],"project_id":3,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Pour tout connaitre du filesystem, de la façon dont sont rangés les fichiers et répertoires, codez par vous-même une des commandes les plus utilisées : ls .","slug":"ft_ls"},{"id":37,"kind":"project","name":"minishell","x":3000.0,"y":2600.0,"by":[{"parent_id":3,"points":[[2999,2796],[3000,2593]]}],"project_id":7,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated ft_ls","description":"Première étape de la réalisation d'un shell. Dans ce projet, vous devez réaliser un mini-shell capable de lire et d'évaluer des commandes simples de l'utilisateur. La lecture impliquera une analyse lexicale et syntaxique triviale de la commande, et l'évaluation impliquera de rechercher le binaire correspondant sur la machine et l'exécuter, ou bien d'exécuter le code concerné dans le cas d'une commande \"built-in\" au shell.","slug":"minishell"},{"id":38,"kind":"project","name":"ft_select","x":2800.0,"y":2450.0,"by":[{"parent_id":7,"points":[[2999,2591],[3000,2450]]},{"parent_id":7,"points":[[3000,2450],[2800,2450]]}],"project_id":33,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated minishell","description":"Ce projet a pour but de vous initier à la manipulation du terminal avec les termcaps. Vous allez ici apprendre à créer une interface utilisateur pour un programme lancé dans le terminal.","slug":"ft_select"},{"id":39,"kind":"project","name":"21sh","x":3000.0,"y":2350.0,"by":[{"parent_id":7,"points":[[3000,2550],[3000,2350]]}],"project_id":523,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must not have validated ft_sh2 and ft_sh3. You must have validated minishell","description":"Let's get serious! 21sh will expect from you to write a close-to-real-world \"read, eval, print\" loop implementation.\r\nWith help from the Termcaps library, you will add functional and useful line edition features to the \"read\" part of your shell, such as : cursor motion, inserting, history, multilines, etc.\r\nBut above all, regarding the \"eval\" part, forget everything about the ft_split function that you've been using in your Minishell to split the command line sent by the user into words!\r\n21sh is going to be your very first realistic interpreter, and as such, it will allow you to discover lexical, syntactic and semantics analysis, common to interpreters and to compilers\r\nBy using fitting data structures and processing, adding features like pipes (\"|\") and redirections (\"<\", \"<<\", \">>\". \">\") will be very easy!\r\n","slug":"21sh"},{"id":40,"kind":"project","name":"Taskmaster","x":3200.0,"y":2200.0,"by":[{"parent_id":523,"points":[[3000,2350],[3000,2200]]},{"parent_id":523,"points":[[3000,2200],[3200,2200]]}],"project_id":122,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of 21sh","description":"The goal of this project is to implement a simplified supervisor daemon in the language of your choice that will perform job control. The program then can be extended to provide advanced logging/reporting or communication over UNIX/TCP sockets. ","slug":"taskmaster"},{"id":99,"kind":"project","name":"ft_printf","x":3200.0,"y":3000.0,"by":[{"parent_id":2,"points":[[3002,3000],[3200,3000]]}],"project_id":5,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"Vous en avez assez de faire vos affichages en alternant ft_putstr et ft_putnbr ? Vous n'avez pas le droit d'utiliser printf ? Recodez le votre ! Ce sera l'occasion de découvrir une feature du C - les fonctions variadiques - et de vous entrainer à la gestion fine des options d'affichage. Vous aurez ensuite le droit d'utiliser votre printf dans tous vos projets ultérieurs.","slug":"ft_printf"},{"id":101,"kind":"project","name":"Filler","x":3396.0,"y":2864.0,"by":[{"parent_id":5,"points":[[3200,3000],[3396,2864]]}],"project_id":26,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated ft_printf","description":"Créez votre joueur pour affronter d’autres étudiants sur le célèbre (ou pas) plateau du Filler. Le principe est simple : deux joueurs s’affrontent sur un plateau, et doivent placer, tour à tour, la pièce que le maître du jeu (fourni sous la forme d’un exécutable Ruby) leur donne, gagnant ainsi des points. La partie s’arrête dès qu’une pièce ne peut plus être placée. Petit projet ludique !","slug":"filler"},{"id":102,"kind":"project","name":"Push_swap","x":3400.0,"y":3150.0,"by":[{"parent_id":5,"points":[[3200,3000],[3400,3150]]}],"project_id":27,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated ft_printf","description":"Ce projet vous demande de trier des données sur une pile, avec un set d’instructions limité, en moins de coups possibles. Pour le réussir, vous devrez manipuler différents algorithmes de tri et choisir la (ou les ?) solution la plus appropriée pour un classement optimisé des données.","slug":"push_swap"},{"id":103,"kind":"project","name":"Lem_in","x":3600.0,"y":3000.0,"by":[{"parent_id":26,"points":[[3396,2864],[3600,3000]]},{"parent_id":27,"points":[[3400,3150],[3600,3000]]}],"project_id":29,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of push_swap and filler","description":"Votre colonie de fourmis doit se déplacer d'un point à un autre. Mais comment faire pour que cela prenne le moins de temps possible ? Ce projet vous fait découvrir les algorithmes de parcours de graphe : votre programme devra sélectionner intelligemment les chemins et les mouvements précis qui doivent être empruntés par ces fourmis.","slug":"lem_in"},{"id":104,"kind":"big_project","name":"Corewar","x":3900.0,"y":3000.0,"by":[{"parent_id":29,"points":[[3600,3000],[3900,3000]]}],"project_id":22,"difficulty":"Tier 3","duration":"about 4 weeks","rules":"You must have validated lem_in","description":"Ce projet vous invite à créer une arène virtuelle et à y faire s’affronter des programmes codés dans un langage simpliste. Vous allez ainsi aborder la conception d’une VM (avec les instructions qu’elle reconnait, les registres, etc), et les problématiques de compilation d’un langage assembleur en bytecode. Avec, en bonus, le plaisir de faire s’affronter vos champions sur votre arène !","slug":"corewar"},{"id":183,"kind":"project","name":"Libft","x":2550.0,"y":3000.0,"by":[{"parent_id":756,"points":[[2348,3001],[2550,3000]]}],"project_id":1,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated piscine-reloaded","description":"Strengthen your skills learned during the C Piscine by recoding functions from the standard C library and other very useful functions. You'll be able to use these functions again and again throughout the curriculum.","slug":"libft"},{"id":185,"kind":"project","name":"Get_Next_Line","x":3002.0,"y":3000.0,"by":[{"parent_id":687,"points":[[3002,3000],[2850,3149]]}],"project_id":2,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated fillit","description":"Qu'il s'agisse d'un fichier, de l'entrée standard, ou même plus tard d'une connexion réseau, vous aurez toujours besoin de lire du contenu ligne par ligne. Il est donc temps de vous attaquer à cette fonction, indispensable pour un certain nombre de vos prochains projets.","slug":"get_next_line"}]