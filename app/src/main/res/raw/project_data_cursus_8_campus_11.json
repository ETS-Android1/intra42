[{"id":2,"kind":"project","name":"mod1","x":3750.0,"y":3250.0,"by":[{"parent_id":29,"points":[[3533,2999],[3750,3000]]},{"parent_id":29,"points":[[3750,3000],[3750,3250]]}],"project_id":78,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of lem_in, first-internship, and startup-internship","description":"This simulation graphic project will have you represent a surface in 3D, on which water will flow. Empirical or scientific (with many equations), recreate a wave, a tsunami or maybe just rain on your surface.","slug":"mod1"},{"id":3,"kind":"big_project","name":"Corewar","x":3895.0,"y":3000.0,"by":[],"project_id":22,"difficulty":"Tier 3","duration":"about 4 weeks","rules":"You must have validated 1 of lem_in, first-internship, and startup-internship","description":"This project involves creating a virtual arena, and having simplistic-language programs fight each other. You will thus get acquainted with VM conception (with instructions it recognizes, registers, etc) and compilation problems of an assembly language in bytecode. In bonus, the pleasure to have your champions fight in the arena.","slug":"corewar"},{"id":25,"kind":"project","name":"FdF","x":3002.0,"y":3206.0,"by":[{"parent_id":15,"points":[[3002,3206],[3003.5,3444.5]]},{"parent_id":540,"points":[[3002,3206],[3002,3001]]}],"project_id":4,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line and fillit","description":"Tous les programmes que vous avez écris jusqu'à maintenant s'exécutaient uniquement en mode texte dans votre terminal. Découvrons maintenant quelque chose de plus excitant : comment ouvrir une fenêtre graphique et dessiner dedans ? Pour commencer votre voyage au pays de la programmation graphique, FdF vous propose de représenter le maillage en fils de fer d'un terrain en 3D.","slug":"fdf"},{"id":26,"kind":"project","name":"Fract'ol","x":3003.0,"y":3444.0,"by":[],"project_id":15,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated 1 of fdf, first-internship, and startup-internship","description":"Discover 2D programming and the psychedelic universe of fractals in this project, using minilibX.","slug":"fract-ol"},{"id":27,"kind":"project","name":"Wolf3d","x":2898.0,"y":3678.0,"by":[{"parent_id":15,"points":[[3003,3444],[2898,3678]]}],"project_id":8,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of fract-ol, first-internship, and startup-internship","description":"Inspired by the famous eponymous game of the 90s and the first First Person Shooter, this project will get you acquainted with ray-casting. Your goal is to represent a dynamic view in the labyrinth inside which you can move.","slug":"wolf3d"},{"id":28,"kind":"project","name":"RTv1","x":3109.0,"y":3673.0,"by":[{"parent_id":15,"points":[[3003.5,3444.5],[3109,3673]]}],"project_id":23,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of fract-ol, first-internship, and startup-internship","description":"Discover the fundamental principles of Raytracing: computer-generated images. This first project will have you create simple scenes involving non-complex objects and lights.","slug":"rtv1"},{"id":35,"kind":"project","name":"ft_ls","x":2999.0,"y":2800.0,"by":[{"parent_id":540,"points":[[3001,2793],[3002,3005]]}],"project_id":3,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line and fillit","description":"Pour tout connaitre du filesystem, de la façon dont sont rangés les fichiers et répertoires, codez par vous-même une des commandes les plus utilisées : ls .","slug":"ft_ls"},{"id":37,"kind":"project","name":"minishell","x":3000.0,"y":2600.0,"by":[{"parent_id":3,"points":[[2999,2801],[3000,2593]]}],"project_id":7,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated 1 of ft_ls, first-internship, and startup-internship","description":"First step in the creation of a shell. In this project, you will create a mini-shell capable of reading and evaluating simple user commands. Reading will involve trivial lexical analysis and parsing of the command. Evaluation will involve searching for the corresponding binary on the machine and execute it, or execute the relevant code in the case of a “built-in” command in the shell.","slug":"minishell"},{"id":38,"kind":"project","name":"ft_select","x":2800.0,"y":2450.0,"by":[{"parent_id":7,"points":[[2999,2591],[3000,2450]]},{"parent_id":7,"points":[[3000,2450],[2800,2450]]}],"project_id":33,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated 1 of minishell, first-internship, and startup-internship","description":"The goal of this project is to get you started on terminal manipulation with termcaps. Here you will learn how to create a user interface for a program launched on the terminal.","slug":"ft_select"},{"id":39,"kind":"project","name":"21sh","x":3000.0,"y":2350.0,"by":[{"parent_id":7,"points":[[3000,2550],[3000,2350]]}],"project_id":523,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must not have validated ft_sh2 and ft_sh3. You must have validated 1 of minishell, first-internship, and startup-internship","description":"On to more serious things! With 21sh, you will write an implementation close to the loop “read, eval, print” of a shell. With the help of the Termcaps library, you will add a functional command line useful for the “read” part of your shell. Cursor movement, editing, history, multi-lines, etc. Especially for the eval part, forget the ft_split function that you used in your Minishell to cut the command line entered by the user! 21Sh will be your first real interpreter. As such, this project will let you discover lexical, syntax and semantic analysis common to interpreters and compilers. With adapted data structure and processing, adding pipe (“|”) and redirect (“<”, “<<, “>>”, “>”) support will be easy!","slug":"21sh"},{"id":40,"kind":"project","name":"Taskmaster","x":3200.0,"y":2200.0,"by":[{"parent_id":523,"points":[[3000,2350],[3000,2200]]},{"parent_id":523,"points":[[3000,2200],[3200,2200]]}],"project_id":122,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of 21sh, first-internship, and startup-internship","description":"You will write a job control program, in the language of your choice. What you will need to accomplish is very similar to the supervisor program.","slug":"taskmaster"},{"id":42,"kind":"project","name":"Push_swap","x":3200.0,"y":2900.0,"by":[{"parent_id":42,"points":[[3300,3000],[3450,2850]]}],"project_id":27,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated get_next_line","description":"This project involves sorting data on a stack, with a limited set of instructions, and the smallest number of moves. To make this happen, you will have to manipulate various sorting algorithms and choose the most appropriate solution(s) for optimized data sorting.","slug":"push_swap"},{"id":99,"kind":"project","name":"ft_printf","x":3201.0,"y":3000.0,"by":[{"parent_id":540,"points":[[3201,3000],[3008.5,2999.5]]}],"project_id":5,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated 2 of fillit, get_next_line, first-internship, and startup-internship","description":"Vous en avez assez de faire vos affichages en alternant ft_putstr et ft_putnbr ? Vous n'avez pas le droit d'utiliser printf ? Recodez le votre ! Ce sera l'occasion de découvrir une feature du C - les fonctions variadiques - et de vous entrainer à la gestion fine des options d'affichage. Vous aurez ensuite le droit d'utiliser votre printf dans tous vos projets ultérieurs.","slug":"ft_printf"},{"id":101,"kind":"project","name":"Filler","x":3364.0,"y":2869.0,"by":[{"parent_id":5,"points":[[3201,3001],[3364,2869]]}],"project_id":26,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated 1 of ft_printf, first-internship, and startup-internship","description":"Create your player to fight other students on the famous (or not) Filler board. The rules are simple: two players fight on a board and, in turn, must place the piece given to them by the game master (a Ruby executable), thereby scoring points. The game ends when a piece cannot be placed. A small fun game project.","slug":"filler"},{"id":103,"kind":"project","name":"Lem_in","x":3533.0,"y":2999.0,"by":[{"parent_id":727,"points":[[3334,2828],[3533,2999]]},{"parent_id":48,"points":[[3348,3168],[3533,2999]]},{"parent_id":22,"points":[[3533,2999],[3895,3000]]}],"project_id":29,"difficulty":"Tier 2","duration":"about 2 weeks","rules":"You must have validated 1 of push_swap, filler, first-internship, and startup-internship","description":"Your ant colony must move from on point to another. How do you do it in the shortest time possible? This project will get you acquainted with graph traversal algorithms: your program will have to intelligently select paths and precise movements used by the ants. ","slug":"lem_in"},{"id":107,"kind":"big_project","name":"42sh","x":3000.0,"y":2100.0,"by":[{"parent_id":523,"points":[[3000,2300],[3000,2100]]}],"project_id":35,"difficulty":"Tier 3","duration":"about 6 weeks","rules":"You must have validated 1 of 21sh, ft_sh3, first-internship, and startup-internship","description":"Ce projet consiste à créer de toutes pièces un shell complet, en reprenant le travail effectué sur votre 21sh. Un jeu minimum de fonctionnalités vous sont demandées, à partir duquel vous allez constuire votre propre shell abouti - en allant potentiellement jusqu'au job control et au shell script. Ce projet vous permet donc de voir ou revoir une très large palette des fonctionnalités UNIX (et POSIX) standard.","slug":"42sh"},{"id":110,"kind":"big_project","name":"RT","x":3000.0,"y":3900.0,"by":[{"parent_id":109,"points":[[3000,3700],[3000,3900]]}],"project_id":24,"difficulty":"Tier 3","duration":"about 6 weeks","rules":"You must have validated rtv1","description":"Let’s shift into higher gear! Following up on Rtv1, RT pushes the limits of what Raytracing can do: mirror effect, transparency, object cutting, texture application…Use the preceding project to create an infrastructure capable of supporting all these ramifications and obtain sublime computer-generated images.","slug":"rt"},{"id":183,"kind":"project","name":"Libft","x":2550.0,"y":3000.0,"by":[{"parent_id":756,"points":[[2348,3001],[2550,3000]]}],"project_id":1,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated piscine-reloaded","description":"Ce premier projet en tant qu'étudiant de 42 va vous faire consolider vos acquis de piscine. Vous allez recoder un certain nombre de fonctions de la librairie C standard, ainsi que d'autres fonctions utilitaires que vous réutiliserez tout au long de votre cursus.","slug":"libft"},{"id":185,"kind":"project","name":"Get_Next_Line","x":2792.0,"y":3001.0,"by":[{"parent_id":1,"points":[[2792,3001],[2552.5,2999.5]]}],"project_id":2,"difficulty":"Tier 1","duration":"about 1 week","rules":"You must have validated libft","description":"Qu'il s'agisse d'un fichier, de l'entrée standard, ou même plus tard d'une connexion réseau, vous aurez toujours besoin de lire du contenu ligne par ligne. Il est donc temps de vous attaquer à cette fonction, indispensable pour un certain nombre de vos prochains projets.","slug":"get_next_line"}]