[{"id":884,"kind":"big_project","name":"Javascript","x":3230.0,"y":3120.0,"by":[{"parent_id":1009,"points":[[3000,3450],[3230,3120]]}],"project_id":1175,"difficulty":225,"duration":null,"rules":"","description":"Want to study web development? Take this project to learn about HTML, CSS, and Javascript - and then create a personal website of your own!","slug":"javascript"},{"id":885,"kind":"big_project","name":"Python","x":2760.0,"y":3120.0,"by":[{"parent_id":1009,"points":[[3000,3450],[2760,3120]]}],"project_id":1141,"difficulty":225,"duration":null,"rules":"","description":"Want to learn Python, the all-purpose programming language? Take this branch to study the essentials of programming and build your own games and tools.","slug":"python"},{"id":886,"kind":"big_project","name":"p5JS","x":3850.0,"y":2880.0,"by":[{"parent_id":1294,"points":[[3470,2880],[3850,2880]]}],"project_id":1200,"difficulty":0,"duration":null,"rules":"","description":"","slug":"p5js"},{"id":887,"kind":"big_project","name":"Node.js","x":3470.0,"y":2500.0,"by":[{"parent_id":1294,"points":[[3470,2880],[3470,2500]]}],"project_id":1295,"difficulty":225,"duration":null,"rules":"","description":"A guided introduction to setting up Node and Express. You will create your own back-end API.","slug":"node-js"},{"id":888,"kind":"big_project","name":"Pygame","x":2120.0,"y":2100.0,"by":[{"parent_id":1146,"points":[[2120,2480],[2120,2100]]}],"project_id":1291,"difficulty":0,"duration":null,"rules":"","description":"This should be fun! Build a game in Pygame - but you'll need learn a little bit of object oriented programming first.","slug":"pygame"},{"id":889,"kind":"big_project","name":"Data Mining","x":1740.0,"y":2480.0,"by":[{"parent_id":1146,"points":[[2120,2480],[1740,2480]]}],"project_id":1191,"difficulty":0,"duration":null,"rules":"","description":"This is the umbrella project for a set of four tutorials on data science tools. Knowledge of Python is recommended before you start, so start with that branch first if you don't have experience.","slug":"data-mining"},{"id":890,"kind":"big_project","name":"Machine Learning","x":860.0,"y":2100.0,"by":[{"parent_id":1195,"points":[[860,2480],[860,2100]]}],"project_id":1283,"difficulty":0,"duration":null,"rules":"","description":"An introduction course on Machine Learning using Python","slug":"machine-learning"},{"id":906,"kind":"part_time","name":"START HERE - Hello 42!","x":3000.0,"y":3450.0,"by":[],"project_id":1009,"difficulty":0,"duration":"about 1 day","rules":"","description":null,"slug":"start-here-hello-42"},{"id":907,"kind":"big_project","name":"Java","x":2400.0,"y":3900.0,"by":[{"parent_id":1009,"points":[[3000,3450],[2400,3900]]}],"project_id":1208,"difficulty":225,"duration":null,"rules":"","description":"Take this branch if you want to study for a College Board test on Java programming, or are interested to learn Java in general.","slug":"java"},{"id":910,"kind":"big_project","name":"Data Structures","x":1740.0,"y":1660.0,"by":[{"parent_id":1292,"points":[[2120,1660],[1740,1660]]}],"project_id":1353,"difficulty":225,"duration":null,"rules":"","description":"Here is the content that used to be the 2nd half of the OOP branch, covering Linked Lists, Stacks and Queues. Ask your mentors to write projects for Hashtables and Trees too!","slug":"data-structures"},{"id":911,"kind":"project","name":"Parseltongue - Part 1","x":2632.0,"y":2992.0,"by":[{"parent_id":1141,"points":[[2760,3120],[2632,2992]]}],"project_id":1143,"difficulty":100,"duration":null,"rules":"","description":"A big introduction into the world of Python. These topics first: * Variables * Strings * Input * String manipulation & placing variables into strings * if/else * index * equality * integers * incrementing/decrementing * for loops. Make sure you register for the class \"42python49\" on Runestone Academy.","slug":"parseltongue-piscine-parseltongue-part-1"},{"id":912,"kind":"project","name":"Parseltongue - Part 2","x":2504.0,"y":2864.0,"by":[{"parent_id":1143,"points":[[2632,2992],[2504,2864]]}],"project_id":1145,"difficulty":100,"duration":null,"rules":"","description":"This project covers topics like: * Lists & tuples * ASCII and control characters * ARGV * floats * Booleans * reviewing everything you learned before","slug":"parseltongue-piscine-parseltongue-part-2"},{"id":913,"kind":"project","name":"Parseltongue - Part 3","x":2376.0,"y":2736.0,"by":[{"parent_id":1145,"points":[[2504,2864],[2376,2736]]}],"project_id":1144,"difficulty":100,"duration":null,"rules":"","description":"This project covers topics like: * Functions * parameters * greater than & less than comparisons * modulo * math library * random library * while loops","slug":"parseltongue-piscine-parseltongue-part-3"},{"id":914,"kind":"project","name":"Parseltongue - Part 4","x":2248.0,"y":2608.0,"by":[{"parent_id":1146,"points":[[2376,2736],[2248,2608]]}],"project_id":1146,"difficulty":100,"duration":null,"rules":"","description":"This project covers topics such as: * dictionaries * reading input from a file * exiting the program gracefully * writing to a file * recursion","slug":"parseltongue-piscine-parseltongue-part-4"},{"id":916,"kind":"project","name":"Showcase: Arcade","x":2120.0,"y":1660.0,"by":[{"parent_id":1354,"points":[[2120,2100],[2120,1660]]}],"project_id":1292,"difficulty":100,"duration":null,"rules":"","description":"Try coding Snake, Helicopter (\"flappy bird\"), or Pong using Pygame.","slug":"pygame-showcase-arcade"},{"id":917,"kind":"project","name":"Intro to OOP","x":2120.0,"y":1880.0,"by":[{"parent_id":1291,"points":[[2120,2100],[2120,1880]]}],"project_id":1354,"difficulty":100,"duration":null,"rules":"","description":"Object oriented programming is very common modern design pattern. It's a strategy to make your code more readable to others and to prevent code repetition. This project covers all the basic fundamentals of OOP: classes and objects, class variables & methods vs instance variables & methods, inheritance, polymorphism.","slug":"pygame-intro-to-oop"},{"id":918,"kind":"project","name":"Web Scraping with Beautiful Soup","x":1520.0,"y":2480.0,"by":[{"parent_id":1191,"points":[[1740,2480],[1520,2480]]}],"project_id":1192,"difficulty":100,"duration":null,"rules":"","description":"","slug":"data-mining-the-49ers-web-scraping-with-beautiful-soup"},{"id":919,"kind":"project","name":"Mapping Geographical Data in Plotly","x":1300.0,"y":2480.0,"by":[{"parent_id":1192,"points":[[1520,2480],[1300,2480]]}],"project_id":1193,"difficulty":100,"duration":null,"rules":"","description":"","slug":"data-mining-the-49ers-mapping-geographical-data-in-plotly"},{"id":920,"kind":"project","name":"API Queries to MySportsFeeds","x":1080.0,"y":2480.0,"by":[{"parent_id":1193,"points":[[1300,2480],[1080,2480]]}],"project_id":1194,"difficulty":100,"duration":null,"rules":"","description":"Practice making queries to an API! For this project, you should use the Google Doc as a guide and write the code onto your own file on your computer.","slug":"data-mining-the-49ers-api-queries-to-mysportsfeeds"},{"id":921,"kind":"project","name":"Statistical Data Visualization with Seaborn","x":860.0,"y":2480.0,"by":[{"parent_id":1194,"points":[[1080,2480],[860,2480]]}],"project_id":1195,"difficulty":100,"duration":null,"rules":"","description":"Explore the Seaborn graphing library and Pandas Dataframes. Make a copy of the Colab notebook, write and run your code in that one!","slug":"data-mining-the-49ers-statistical-data-visualization-with-seaborn"},{"id":922,"kind":"project","name":"Part 1: Linked Lists","x":1740.0,"y":1440.0,"by":[{"parent_id":1353,"points":[[1740,1660],[1740,1440]]}],"project_id":1368,"difficulty":100,"duration":null,"rules":"","description":"In this project, you'll build your own version of the classic linked-list structure and implement typical functions used on linked lists. The finished linked list will be used within your final project - PvNP. ","slug":"data-structures-in-python-part-1-linked-lists"},{"id":923,"kind":"project","name":"Part 2: Queues and Stacks","x":1740.0,"y":1220.0,"by":[{"parent_id":1369,"points":[[1740,1440],[1740,1220]]}],"project_id":1369,"difficulty":100,"duration":null,"rules":"","description":"In this project, build on top of your linked list implementation to create the classic Queue (first in, first out) and Stack (first in, last out) data structures. These ones will also be used within your final project of Plants vs Non-Plants! ","slug":"data-structures-in-python-part-2-queues-and-stacks"},{"id":924,"kind":"project","name":"Plants vs NonPlants!","x":1740.0,"y":1000.0,"by":[{"parent_id":1369,"points":[[1740,1220],[1740,1000]]}],"project_id":1370,"difficulty":100,"duration":null,"rules":"","description":"Go ahead, take 15 minutes to play Plants vs Zombies... I'm not watching. But when you're done, come on back. Our version is going to be so much cooler. Cuz you made it - yourself. ","slug":"data-structures-plants-vs-nonplants"},{"id":925,"kind":"project","name":"ML_01","x":860.0,"y":1880.0,"by":[{"parent_id":1283,"points":[[860,2100],[860,1880]]}],"project_id":1286,"difficulty":100,"duration":null,"rules":"","description":"Learn about the essential python libraries for machine learning","slug":"machine-learning-using-python-ml_01"},{"id":926,"kind":"project","name":"ML_02","x":860.0,"y":1660.0,"by":[{"parent_id":1286,"points":[[860,1880],[860,1660]]}],"project_id":1287,"difficulty":100,"duration":null,"rules":"","description":"Introduction to the types of machine learning and data pre-processing","slug":"machine-learning-using-python-ml_02"},{"id":927,"kind":"project","name":"ML_03","x":860.0,"y":1440.0,"by":[{"parent_id":1287,"points":[[860,1660],[860,1440]]}],"project_id":1288,"difficulty":100,"duration":null,"rules":"","description":"Learn the most basic type of regression model, linear regression!","slug":"machine-learning-using-python-ml_03"},{"id":928,"kind":"project","name":"ML_04","x":860.0,"y":1220.0,"by":[{"parent_id":1288,"points":[[860,1440],[860,1220]]}],"project_id":1289,"difficulty":100,"duration":null,"rules":"","description":"Learn the most basic type of classification model, logistic regression!","slug":"machine-learning-using-python-ml_04"},{"id":929,"kind":"project","name":"Web01 - HTML_CSS","x":3350.0,"y":3000.0,"by":[{"parent_id":1175,"points":[[3230,3120],[3350,3000]]}],"project_id":1131,"difficulty":100,"duration":null,"rules":"","description":"For web development, first learn the essentials of HTML and CSS. In this project we will build a grid-style website with input forms, styling, and links. In the sequel to this project we'll add Javascript functionality to the site.","slug":"javascript-web01-html_css"},{"id":930,"kind":"project","name":"Web02 - FreeCodeCamp JS","x":3470.0,"y":2880.0,"by":[{"parent_id":1131,"points":[[3350,3000],[3470,2880]]}],"project_id":1294,"difficulty":100,"duration":null,"rules":"","description":"Learn how to code in JavaScript, the language of choice for modern web and app development.","slug":"javascript-web02-freecodecamp-js"},{"id":931,"kind":"project","name":"API Creation","x":3470.0,"y":2280.0,"by":[{"parent_id":1295,"points":[[3470,2500],[3470,2280]]}],"project_id":1296,"difficulty":225,"duration":null,"rules":"","description":"This project is a basic introduction to learning backend development with Node.js.","slug":"api-s-with-node-js-api-creation"},{"id":932,"kind":"project","name":"MongoDB Setup","x":3470.0,"y":2060.0,"by":[{"parent_id":1296,"points":[[3470,2280],[3470,2060]]}],"project_id":1297,"difficulty":100,"duration":null,"rules":"","description":"","slug":"api-s-with-node-js-mongodb-setup"},{"id":933,"kind":"project","name":"Hosting on Heroku","x":3470.0,"y":1840.0,"by":[{"parent_id":1297,"points":[[3470,2060],[3470,1840]]}],"project_id":1298,"difficulty":100,"duration":null,"rules":"","description":"","slug":"api-s-with-node-js-hosting-on-heroku"},{"id":934,"kind":"project","name":"p5js-00","x":3850.0,"y":3100.0,"by":[{"parent_id":1200,"points":[[3850,2880],[3850,3100]]}],"project_id":1221,"difficulty":100,"duration":null,"rules":"","description":"","slug":"javascript-and-graphics-in-p5js-p5js-00"},{"id":935,"kind":"project","name":"p5js-01","x":3850.0,"y":3320.0,"by":[{"parent_id":1221,"points":[[3850,3100],[3850,3320]]}],"project_id":1222,"difficulty":100,"duration":null,"rules":"","description":"This section is about mouse-click interaction and if statements, AKA, creating interactive buttons.","slug":"javascript-and-graphics-in-p5js-p5js-01"},{"id":936,"kind":"project","name":"p5js-02","x":3850.0,"y":3540.0,"by":[{"parent_id":1224,"points":[[3850,3320],[3850,3540]]}],"project_id":1224,"difficulty":100,"duration":null,"rules":"","description":"This one covers arrays and for loops.","slug":"javascript-and-graphics-in-p5js-p5js-02"},{"id":937,"kind":"project","name":"p5js-03","x":3850.0,"y":3760.0,"by":[{"parent_id":1225,"points":[[3850,3540],[3850,3760]]}],"project_id":1225,"difficulty":100,"duration":null,"rules":"","description":"This part is a review of the algorithms topic. ","slug":"javascript-and-graphics-in-p5js-p5js-03"},{"id":938,"kind":"project","name":"p5js-04","x":3850.0,"y":3980.0,"by":[{"parent_id":1225,"points":[[3850,3760],[3850,3980]]}],"project_id":1229,"difficulty":100,"duration":null,"rules":"","description":"We start studying abstraction by creating our own functions.","slug":"javascript-and-graphics-in-p5js-p5js-04"},{"id":939,"kind":"project","name":"p5js-05","x":3850.0,"y":4200.0,"by":[{"parent_id":1229,"points":[[3850,3980],[3850,4200]]}],"project_id":1231,"difficulty":100,"duration":null,"rules":"","description":"Abstraction Part 2: Objects","slug":"javascript-and-graphics-in-p5js-p5js-05"},{"id":940,"kind":"project","name":"Showcase: Command-Line Games","x":2120.0,"y":2480.0,"by":[{"parent_id":1146,"points":[[2248,2608],[2120,2480]]}],"project_id":1313,"difficulty":225,"duration":null,"rules":"","description":"","slug":"python-showcase-command-line-games"},{"id":941,"kind":"big_project","name":"APCSP Prep","x":2120.0,"y":2860.0,"by":[{"parent_id":3294,"points":[[2120,2040],[2120,2860]]}],"project_id":1361,"difficulty":50,"duration":null,"rules":"","description":"Although we cannot provide you with a place to take any AP exams, we can help you study for the AP Computer Science Principles test if you are able to take the test at your own school. Join this project to study specific topics beyond \"intro to programming\" which will be on the test.","slug":"apcsp-prep"},{"id":942,"kind":"project","name":"APCSP-Programming","x":1740.0,"y":2860.0,"by":[{"parent_id":3419,"points":[[2120,2860],[1740,2860]]}],"project_id":1710,"difficulty":100,"duration":null,"rules":"","description":"Join this project to study specific topics related to programming.","slug":"apcsp-prep-apcsp-programming"},{"id":943,"kind":"project","name":"APCSP - Create Task","x":1520.0,"y":2860.0,"by":[{"parent_id":3545,"points":[[1740,2860],[1520,2860]]}],"project_id":1007,"difficulty":225,"duration":"about 60 days","rules":"","description":"Build your Create project for the AP portfolio, and sign up for a peer correction to receive feedback on your project and to earn points for completing it.","slug":"apcsp-prep-apcsp-create-task"},{"id":1088,"kind":"project","name":"APCSP - Explore Task","x":1300.0,"y":2860.0,"by":[{"parent_id":3545,"points":[[1520,2860],[1300,2860]]}],"project_id":988,"difficulty":100,"duration":null,"rules":"","description":"APCSP - Explore","slug":"apcsp-prep-apcsp-explore-task"},{"id":1089,"kind":"project","name":"APCSP - Digital Portfolio","x":1080.0,"y":2860.0,"by":[{"parent_id":4245,"points":[[1300,2860],[1080,2860]]}],"project_id":1697,"difficulty":null,"duration":null,"rules":"","description":"Use this guide to submit your create and explore tasks to the College Board AP Digital Portfolio system. ","slug":"apcsp-prep-apcsp-digital-portfolio"},{"id":1090,"kind":"project","name":"APCSP - Vocabulary","x":860.0,"y":2860.0,"by":[{"parent_id":4116,"points":[[1080,2860],[860,2860]]}],"project_id":1366,"difficulty":100,"duration":null,"rules":"","description":"Use the vocabulary spreadsheet linked here and use it to keep track of your study progress.","slug":"apcsp-prep-apcsp-vocabulary"},{"id":1093,"kind":"project","name":"APCSP - Explore Practice","x":1300.0,"y":3020.0,"by":[{"parent_id":4245,"points":[[1300,2860],[1300,3020]]}],"project_id":1027,"difficulty":100,"duration":null,"rules":"","description":"**When you are done with this project, contact Sangita for feedback on your practice work.**","slug":"apcsp-explore-task-apcsp-explore-practice"}]