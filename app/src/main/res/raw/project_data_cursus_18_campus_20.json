[{"id":99,"kind":"project","name":"ft_printf","x":3201.0,"y":3000.0,"by":[{"parent_id":540,"points":[[3201,3000],[3008.5,2999.5]]}],"project_id":5,"difficulty":100,"duration":"about 1 week","rules":"You must have validated 2 of fillit, get_next_line, first-internship, and startup-internship","description":"Are you tired of using alternatively ft_putstr and ft_putnbr for your displays? You don’t have the right to use printf? Re-code your own! This is a good time to discover a C feature: variadic functions, and to train your display options management skills. You will then be able to use your printf in all future projects.","slug":"ft_printf"},{"id":101,"kind":"project","name":"Filler","x":3364.0,"y":2869.0,"by":[{"parent_id":5,"points":[[3201,3001],[3364,2869]]}],"project_id":26,"difficulty":100,"duration":"about 1 week","rules":"You must have validated 1 of ft_printf, first-internship, and startup-internship","description":"Créez votre joueur pour affronter d’autres étudiants sur le célèbre (ou pas) plateau du Filler. Le principe est simple : deux joueurs s’affrontent sur un plateau, et doivent placer, tour à tour, la pièce que le maître du jeu (fourni sous la forme d’un exécutable Ruby) leur donne, gagnant ainsi des points. La partie s’arrête dès qu’une pièce ne peut plus être placée. Petit projet ludique !","slug":"filler"},{"id":102,"kind":"project","name":"Push_swap","x":3365.0,"y":3142.0,"by":[{"parent_id":5,"points":[[3201,3001],[3365,3142]]}],"project_id":27,"difficulty":100,"duration":"about 1 week","rules":"You must have validated 1 of ft_printf, first-internship, and startup-internship","description":"This project involves sorting data on a stack, with a limited set of instructions, and the smallest number of moves. To make this happen, you will have to manipulate various sorting algorithms and choose the most appropriate solution(s) for optimized data sorting.","slug":"push_swap"},{"id":103,"kind":"project","name":"Lem_in","x":3533.0,"y":2999.0,"by":[{"parent_id":727,"points":[[3334,2828],[3533,2999]]},{"parent_id":48,"points":[[3348,3168],[3533,2999]]},{"parent_id":22,"points":[[3533,2999],[3895,3000]]}],"project_id":29,"difficulty":225,"duration":"about 2 weeks","rules":"You must have validated 1 of push_swap, filler, first-internship, and startup-internship","description":"Your ant colony must move from on point to another. How do you do it in the shortest time possible? This project will get you acquainted with graph traversal algorithms: your program will have to intelligently select paths and precise movements used by the ants. ","slug":"lem_in"},{"id":185,"kind":"project","name":"Get_Next_Line","x":2792.0,"y":3001.0,"by":[{"parent_id":1,"points":[[2792,3001],[2552.5,2999.5]]}],"project_id":2,"difficulty":100,"duration":"about 1 week","rules":"You must have validated libft","description":"Qu'il s'agisse d'un fichier, de l'entrée standard, ou même plus tard d'une connexion réseau, vous aurez toujours besoin de lire du contenu ligne par ligne. Il est donc temps de vous attaquer à cette fonction, indispensable pour un certain nombre de vos prochains projets.","slug":"get_next_line"}]